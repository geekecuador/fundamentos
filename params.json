{"name":"Fundamentos","tagline":"Fundamentos de programación","body":"*****FUNDAMENTOS DE PROGRAMACION*****\r\n====================\r\n\r\nFundamentos de programación\r\nUn repositorio, donde se alojará todo el codigo de los deberes de la materia de fundamentos de programacion.\r\n \r\n\r\n<img src=\"http://360.espe.edu.ec/images/Logo%20ESPE.png\" WIDTH=170 HEIGHT=80 BORDER=2  align=middle>\r\nContribute\r\n==========\r\n\r\nSo you've got an awesome idea to throw into Jekyll. Great! Please keep the\r\nfollowing in mind:\r\n\r\n* **Contributions will not be accepted without tests.**\r\n* If you're creating a small fix or patch to an existing feature, just a simple\r\n  test will do. Please stay in the confines of the current test suite and use\r\n  [Shoulda](http://github.com/thoughtbot/shoulda/tree/master) and\r\n  [RR](http://github.com/btakita/rr/tree/master).\r\n* If it's a brand new feature, make sure to create a new\r\n  [Cucumber](https://github.com/cucumber/cucumber/) feature and reuse steps\r\n  where appropriate. Also, whipping up some documentation in your fork's wiki\r\n  would be appreciated, and once merged it will be transferred over to the main\r\n  wiki.\r\n* If your contribution changes any Jekyll behavior, make sure to update the\r\n  documentation. It lives in `site/_posts`. If the docs are missing information,\r\n  please feel free to add it in. Great docs make a great project!\r\n* Please follow the [GitHub Ruby Styleguide](https://github.com/styleguide/ruby)\r\n  when modifying Ruby code.\r\n\r\nTest Dependencies\r\n-----------------\r\n\r\nTo run the test suite and build the gem you'll need to install Jekyll's\r\ndependencies. Jekyll uses Bundler, so a quick run of the bundle command and\r\nyou're all set!\r\n\r\n    $ bundle\r\n\r\nBefore you start, run the tests and make sure that they pass (to confirm your\r\nenvironment is configured properly):\r\n\r\n    $ rake test\r\n    $ rake features\r\n\r\nWorkflow\r\n--------\r\n\r\nHere's the most direct way to get your work merged into the project:\r\n\r\n* Fork the project.\r\n* Clone down your fork ( `git clone git@github.com:<username>/jekyll.git` ).\r\n* Create a topic branch to contain your change ( `git checkout -b my_awesome_feature` ).\r\n* Hack away, add tests. Not necessarily in that order.\r\n* Make sure everything still passes by running `rake`.\r\n* If necessary, rebase your commits into logical chunks, without errors.\r\n* Push the branch up ( `git push origin my_awesome_feature` ).\r\n* Create a pull request against mojombo/jekyll and describe what your change\r\n  does and the why you think it should be merged.\r\n\r\nGotchas\r\n-------\r\n\r\n* If you want to bump the gem version, please put that in a separate commit.\r\n  This way, the maintainers can control when the gem gets released.\r\n* Try to keep your patch(es) based from the latest commit on mojombo/jekyll.\r\n  The easier it is to apply your work, the less work the maintainers have to do,\r\n  which is always a good thing.\r\n* Please don't tag your GitHub issue with [fix], [feature], etc. The maintainers\r\n  actively read the issues and will label it once they come across it.\r\n\r\nFinally...\r\n----------\r\n\r\nThanks! Hacking on Jekyll should be fun. If you find any of this hard to figure\r\nout, let us know so we can improve our process or documentation!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}